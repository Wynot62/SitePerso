GIT

Fichier Untracked -> Unmodified -> Stage(indexé) -> Validé

git add = ajouté un fichier
git add . =ajouté tout les fichiers d'un dossier

git commit -m "" = nommer une sauvegarde

mkdir: créer un dossier
Cd : changer de dossier
ls: lister les fichiers
cat file :Afficher le contenue
cat "file2" >> "file" = ajouté le fichier 2 à la fin du 1er
pwd: afficher le nom du dossier courant
vi : afficher le contenue d'un fichier et le modifier
creer un raccourci: git config --global alias.[raccourci] "commande"

Git Init : Passer en master

git checkout file.* : revenir à la dernière version

git diff: différence entre l'ancienne et la nouvelle sauvegarde
git diff: difference entre l'ancienne et la nouvelle sauvegarde apres avec était save

git reset HEAD file.*:


Revenir à une ancienne save

git reset (7 1er chiffres et lettres) file.*
git checkout file.*
git reset master
git log pour afficher toutes les sauvegardes

<<

<<
<<

git gui pour accéder à l'interface graphique pour la sauvegarde des fichiers
gitk & Voir ce qu'il y a dans le dossier avec les branches etc

<<
<<
<<

BRANCHE:

git branch [Nom 2eme branche] Creer la branche
git checkout [Nom 2eme branche ] aller sur la nouvelle branche
git branche -m : Renommer une branche

git checkout -b [Nom] creer et aller dans la branche directement
git branch : voir la liste des branche dans le projet/ La branche active est marqué d'une étoile
git branch -v : voir la liste des branches avec les sauvegardes de chaqu'une d'entre elle
git tag v1.12 -m "version 1.12"  Pour ajouter un tag à la version avant de changer de branche pour bien distinguer les versions 1-2-3 etc
git tag -a v1.12 -m "description" Pour ajouter un tag, ajouter une version et insérer un commentaire directement

git tag -d [nom du tag] Supprimer un tag

git merge +nom de la branche à coler
git reset --hard HEAD : redécoler les branches qui ont était fusionné

GIT HUB :

git remote add "nom comme origin" +liens :creer un liens entre le serv et le pc
git remote -v : voir les liens des serv
git remove remove +liens : revenir en arriere si on s'est trompé de lien
git push "nom comme origin" master: pour envoyer vers le serveur
git pull "nom comme origin" master: pour récuperer les dossiers du serveur